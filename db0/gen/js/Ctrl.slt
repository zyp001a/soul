~
#t = propGet(#0, "ctrl")
#a = propGet(#0, "args")
@if t=="if" {
 @for #i=0;i<len(a)-1;i+=2 {
  @if i == 0 {
	 ~if~
	}@else{
	 ~else if~
	}
	~(~=exec(a[i], #$conf)~){~="\n" + ind(exec(a[i+1], #$conf))~}~	
 }
 @if mod(len(a), 2) == 1 {
	~else{~="\n" + ind(exec(a[len(a)-1], #$conf))~}~
 }
} @elif t == "return" {
 ~return ~=exec(a[0], #$conf)~~
} @elif t == "continue" {
 ~continue~
} @elif t == "break" {
 ~break~
} @elif t == "foreach" {
~for(let _~=val(a[0])~ of ~=exec(a[1], #$conf)~){  
~=ind(exec(a[2], #$conf))~}~
} @elif t == "for" {
~for(~=exec(a[0], #$conf)~; ~=exec(a[1], #$conf)~; ~=exec(a[2], #$conf)~){  
~=ind(exec(a[3], #$conf))~}~
} @elif t == "while" {x
~while(~=exec(a[0], #$conf)~){  
~=ind(exec(a[1], #$conf))~}~
} @elif t == "each" {
 #tmp = suid(#$conf);
~let _tmp~=tmp~ = ~=exec(a[2], #$conf)~;
for(let _~=val(a[0])~ in _tmp~=tmp~){
  let _~=val(a[1])~ = _tmp~=tmp~[_~=val(a[0])~];
~=ind(exec(a[3], #$conf))~}~
}
~