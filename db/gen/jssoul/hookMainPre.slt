~
asobj->maininit = 1
tplParse = @FuncInternal {}
~
function die(){
  for(var i in arguments){
    console.error(arguments[i]);
  }
  console.error(getStackTrace());
  process.exit();
}
function getStackTrace(){
  var obj = {};
  Error.captureStackTrace(obj, getStackTrace);
  return obj.stack.toString().replace("[object Object]\n","");
}

function asval(o){
  var t = typeof o;
  if(t != "object"){
    return o;
  }
  if(!o.__){
    return o;
  }
  if(o.__.isval)
    return o.val
  var tid = o.__.obj.__.id;
  if(tid == "SidDic"){
   return asval(o.sidDic[o.sid])
  }
  if(tid == "SidObj"){
   return asval(o.sidObj[o.sid])
  }
  if(tid == "Aid"){
   return asval(o.aidArr[o.aid])
  }
  return o;
}
function asobj(o){
  var t = typeof o;
  if(t == "undefined"){
    return initx({val: undefined}, {obj: global._undfc, isval:1});
  }
  if(t == "object"){
    if(!t) return initx({val: null}, {obj: global._nullc, isval:1});
    if(!o.__){
      if(Array.isArray(o)){
        return initx(o, {obj: global._arrc});
      }else{
        return initx(o, {obj: global._dicc});
      }
    }
    return o;
  }
  if(t == "string"){
    return initx({val: o}, {obj: global._strc, isval:1});
  }
  if(t == "number"){
    return initx({val: o}, {obj: global._numc, isval:1});
  }
  die(t + " not defined, asobj")
}
